name: ðŸŒˆ All Builds
on:
  push:
    branches: [ master, main, ci-testing ]
    tags:
      - "v*"

# Global Settings
env:
  PROJECT_FOLDER: .
  TARGET_PATH: demo/addons/godot-krita-importer/bin/
  TARGET_NAME: libkra_importer
  TARGET: release

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows Compilation
            os: "windows-latest"
            artifact-name: windows
            artifact-extension: dll
            additional-python-packages: pywin32

          - name: Ubuntu Compilation
            os: "ubuntu-20.04"
            artifact-name: linux
            artifact-extension: so

          - name: MacOS Compilation
            os: "macos-11"
            artifact-name: osx
            artifact-extension: dylib

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons ${{ matrix.additional-python-packages }}
          python --version
          scons --version

      # The prebuilt pnglib configuration has to be copied to the base folder!
      - name: Windows Compilation
        if: runner.os == 'Windows'
        run: |
          if(-Not (Test-Path -Path ${{ env.PROJECT_FOLDER }}\${{ env.TARGET_PATH }}))
          {
            mkdir ${{ env.PROJECT_FOLDER }}\${{ env.TARGET_PATH }}
          }
          cd ${{ env.PROJECT_FOLDER }}
          cd godot-cpp
          scons platform=windows bits=64 target=${{ env.TARGET }} generate_bindings=yes -j4
          cd ..
          scons platform=windows target=${{ env.TARGET }} target_path=${{ env.TARGET_PATH }} target_name=${{ env.TARGET_NAME }}

      # The prebuilt pnglib configuration has to be copied to the base folder!
      - name: Linux or MacOS Compilation
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          mkdir -v -p ${{ env.PROJECT_FOLDER }}/${{ env.TARGET_PATH }}
          cd ${{ env.PROJECT_FOLDER }}
          cd godot-cpp
          scons platform=${{ matrix.artifact-name }} bits=64 target=${{ env.TARGET }} generate_bindings=yes -j4
          cd ..
          scons platform=${{ matrix.artifact-name }} target=${{ env.TARGET }} target_path=${{ env.TARGET_PATH }} target_name=${{ env.TARGET_NAME }}

      - name: Upload Artifact
        env:
          ARTIFACT_FOLDER: ${{ env.PROJECT_FOLDER }}/${{ env.TARGET_PATH }}/${{ matrix.artifact-name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ env.ARTIFACT_FOLDER }}/*.${{ matrix.artifact-extension }}

  release:
    name: Release
    runs-on: "ubuntu-20.04"
    needs: [build]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: demo/addons/godot-krita-importer/bin

      - name: Compress Release Assets
        run: |
          zip -r demo.zip demo/
          cd demo/
          zip -r addons.zip addons/
      
      - name: Create Release & Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
          token: ${{ secrets.PAT }} # Use a personal access token such that the asetlib_sync.yml is triggered by this release!
          files: |
            demo.zip
            demo/addons.zip
